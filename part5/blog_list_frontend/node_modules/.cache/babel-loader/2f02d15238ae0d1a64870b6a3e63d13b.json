{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = '/api/blogs';\nlet token = null;\n\nconst setToken = newToken => token = `bearer ${newToken}`;\n\nconst getAll = () => axios.get(baseUrl).then(response => response.data);\n\nconst create = async newObject => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\n\nconst services = {\n  getAll,\n  create,\n  setToken\n};\nexport default services;","map":{"version":3,"names":["axios","baseUrl","token","setToken","newToken","getAll","get","then","response","data","create","newObject","config","headers","Authorization","post","services"],"sources":["E:/full stack dev/part5/blog_list_frontend/src/services/blogs.js"],"sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => token = `bearer ${newToken}`\r\n\r\nconst getAll = () => axios.get(baseUrl).then(response => response.data)\r\nconst create = async newObject => {\r\n    const config = {\r\n        headers: {Authorization: token}\r\n    }\r\n    const response = await axios.post(baseUrl, newObject, config)\r\n    return response.data\r\n}\r\n\r\nconst services = { getAll, create, setToken }\r\nexport default services"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,YAAhB;AAEA,IAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAMC,QAAQ,GAAGC,QAAQ,IAAIF,KAAK,GAAI,UAASE,QAAS,EAAxD;;AAEA,MAAMC,MAAM,GAAG,MAAML,KAAK,CAACM,GAAN,CAAUL,OAAV,EAAmBM,IAAnB,CAAwBC,QAAQ,IAAIA,QAAQ,CAACC,IAA7C,CAArB;;AACA,MAAMC,MAAM,GAAG,MAAMC,SAAN,IAAmB;EAC9B,MAAMC,MAAM,GAAG;IACXC,OAAO,EAAE;MAACC,aAAa,EAAEZ;IAAhB;EADE,CAAf;EAGA,MAAMM,QAAQ,GAAG,MAAMR,KAAK,CAACe,IAAN,CAAWd,OAAX,EAAoBU,SAApB,EAA+BC,MAA/B,CAAvB;EACA,OAAOJ,QAAQ,CAACC,IAAhB;AACH,CAND;;AAQA,MAAMO,QAAQ,GAAG;EAAEX,MAAF;EAAUK,MAAV;EAAkBP;AAAlB,CAAjB;AACA,eAAea,QAAf"},"metadata":{},"sourceType":"module"}